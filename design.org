* TK
** Fluent Interface
- Method of designing a readable/fluent interface, based on method chaining
** Failover
- Capacity to transfer control from a primary system which suffers an issue to a backup system
- Ref: https://www.techopedia.com/definition/1202/failover
** Serverless compution
- Ref: https://www.techopedia.com/definition/32477/serverless-computing
- Ref: https://www.techopedia.com/serverless-computing-101/2/32479
** Referential Transparency
- A property of programming constructs.
- A function or method that can be replaced by Its returned value, *without changing the behavior
  of the program* is referentially transparent
- Ref: http://wiki.c2.com/?ReferentialTransparency
** Referential Opacity
** Reification
** Coroutine

* Rules
- *switch* -> think polymorphism

* Patterns
** Command Query Separation
- Seperate an object's methods into:
  - *Queries*: that query data without changing the state of the object (no side effect)
  - *Commands*: that change the state of the object without returning anything
- Ref: https://martinfowler.com/bliki/CommandQuerySeparation.html
** Fire And Forget
- Ref: http://www.enterpriseintegrationpatterns.com/patterns/conversation/FireAndForget.html
